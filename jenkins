pipeline {
    agent any

    environment {
        SONARQUBE = 'SonarQube-Local' // Name of SonarQube configured in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Ayoobkibrahim/maven-project.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Code Analysis') {
            steps {
                withSonarQubeEnv("SonarQube-Local") {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=maven-project'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        success {
            mail to: 'ayoobkibrahim109@gmail.com',
                 subject: "SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Good news! The build succeeded.\nCheck console output at: ${env.BUILD_URL}"
        }
        failure {
            mail to: 'ayoobkibrahim109@gmail.com',
                 subject: "FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Oops! The build failed.\nCheck console output at: ${env.BUILD_URL}"
        }
    }
}
